// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:root@localhost/prisma"
}

model Job {
  id          Int      @id @default(autoincrement())
  title       String
  companyId   Int
  company     Company  @relation(fields: [companyId], references: [id])
  description String
  location    String
  minSalary   Decimal
  maxSalary   Decimal
  imageUri    String
  postDate    DateTime
  isOpen      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  JobApplication JobApplication[]
}

enum UserType {
  COMPANY
  INDIVIDUAL
}

model User {
  id              Int              @id @default(autoincrement())
  name            String
  codeName        String           @unique
  email           String           @unique
  phone           String
  password        String
  token           String           @unique
  jobApplications JobApplication[]
  type            UserType
  company         Company?         @relation(fields: [companyId], references: [id])
  companyId       Int?             @unique
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  UserPost UserPost[]
}

model Company {
  id          Int      @id @default(autoincrement())
  name        String
  location    String
  logoUrl     String
  description String
  highlights  String
  jobs        Job[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User?
}

model JobApplication {
  id          Int      @id @default(autoincrement())
  job         Job      @relation(fields: [jobId], references: [id])
  jobId       Int      @unique
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
  resume      String
  coverLetter String
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model UserPost {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  title     String
  content   String
  imageUri  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
